<?xml version="1.0" encoding="UTF-8"?>

<!-- Note: sync attribute can be sync, async, or guarded. Only for input />
   Note: priority attribute can be high, medium, low or interrupt.
         Only valid for active components input.
   Note  kind attribute of component can be ether active or passive.
         -->
<?xml-model href="../../schema/ISF/component_schema.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>
<component name="PcaServo" kind="passive" namespace="RobotArm">
    <import_port_type>RobotArm/ServoPorts/ServoPortAi.xml</import_port_type>
    <import_port_type>Drv/I2CPorts/I2CPortAi.xml</import_port_type>
    <comment>Servo Driver component to convert desired positions/angles to the PWM chip's input format.</comment>
    <ports>
        <port name="position" data_type="RobotArm::ServoSetAngle" kind="input">
            <comment>
            servo position port
            </comment>
        </port>
        <port name="i2c" data_type="Drv::I2C" kind="output">
            <comment>
            I2C Port
            </comment>
        </port>
    </ports>

    <commands>
        <!-- Angle Commands -->
        <command kind="sync" opcode="0x0" mnemonic="PS_Set_Angle">
            <comment>
            Command to set angle of servo
            </comment>
            <args>
                <arg name="angle" type="F32">
                    <comment>Commanded servo angle</comment>
                </arg>
             </args>
        </command>
        <command kind="sync" opcode="0x1" mnemonic="PS_Set_Raw_PulseWidth">
            <comment>
            Command to set pulse width in milliseconds
            </comment>
            <args>
                <arg name="time" type="F32">
                    <comment>Commanded pulse width time in milliseconds</comment>
                </arg>
             </args>
        </command>
        <!-- Enable and Disable -->
        <command kind="sync" opcode="0x2" mnemonic="PS_DIS" >
            <comment>
            Disable servo board
            </comment>
        </command>
        <command kind="sync" opcode="0x3" mnemonic="PS_EN" >
            <comment>
            Enable servo board
            </comment>
        </command>
    </commands>

    <telemetry>
        <channel id="0" name="PS_Angle" data_type="F32">
            <comment>
            Commanded angle
            </comment>
        </channel>
        <channel id="2" name="PS_PulseWidth" data_type="F32">
            <comment>
            Raw pulse width
            </comment>
        </channel>
        <channel id="3" name="PS_Reg" data_type="U16" format_string = "0x%04X">
            <comment>
            Register value
            </comment>
        </channel>
    </telemetry>

    <events>
        <!-- Commanded angle event -->
        <event id="0" name="PS_AngleCmd" severity="ACTIVITY_HI" format_string = "Motor %d commanded to angle %f, pulse width %f (0x%04X)"  >
            <comment>
            Angle commanded
            </comment>
            <args>
                <arg name="inst" type="U8">
                    <comment>The motor instance</comment>
                </arg>
                <arg name="angle" type="F32">
                    <comment>The commanded angle</comment>
                </arg>
                <arg name="pulse_width" type="F32">
                    <comment>The commanded angle</comment>
                </arg>
                <arg name="reg" type="U16">
                    <comment>The register value</comment>
                </arg>
            </args>
        </event>
        <!-- Commanded pulse width event -->
        <event id="0" name="PS_PulseWidthCmd" severity="ACTIVITY_HI" format_string = "Motor %d commanded to pulse width %f (0x%04X)"  >
            <comment>
            Pulse width commanded
            </comment>
            <args>
                <arg name="inst" type="U8">
                    <comment>The motor instance</comment>
                </arg>
                <arg name="pulse_width" type="F32">
                    <comment>The commanded angle</comment>
                </arg>
                <arg name="reg" type="U16">
                    <comment>The register value</comment>
                </arg>
            </args>
        </event>
    </events>

</component>

